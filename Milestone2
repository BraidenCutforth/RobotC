#pragma config(I2C_Usage, I2C1, i2cSensors)
#pragma config(Sensor, dgtl1,  Button1,        sensorTouch)
#pragma config(Sensor, dgtl2,  Button2,        sensorTouch)
#pragma config(Sensor, I2C_1,  ,               sensorQuadEncoderOnI2CPort,    , AutoAssign )
#pragma config(Motor,  port1,           Arm,           tmotorVex393_HBridge, openLoop, encoderPort, I2C_1)
#pragma config(Motor,  port2,           Left,          tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           Right,         tmotorVex393_MC29, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

bool btn1 = false;
bool btn2 = false;


void checkInput(){
	if (SensorValue(Button1) && !btn1){
		btn1 = true;
	}
	if (SensorValue(Button2) && !btn2){
		btn2 = true;
	}
}
/*This checkInput function was based off of the code from lab #2
Only the variable names were changed by our team.
*/
task main()
{

	while(true){
		checkInput();
		if(btn1 == true){
			motor[Right] = 150;
			motor[Left] = 150;
			btn1 = false;
			delay(2200); //calibration number
			motor[Left] = 0;
			motor[Right] = 0;
		}
		if (btn2 == true){
			motor[Left] = -50;
			motor[Right] = 50;
			btn2 = false;
			delay(670);
			motor[Left] = 0;
			motor[Right] = 0;
		}
	}
// SensorValue(motorA) > 10
}

task main(){
	int a = 250; //delay value for movement
	while(true){
		checkInput();

		if (btn1 == true){
			motor[Arm] = -50;
			delay(a);
			motor[Arm] = 0;
			delay(500);
			motor[Left] = -50;
			motor[Right] = -50;
			delay(500);
			motor[Left] = 0;
			motor[Right] = 0;
			motor[Arm] = 50;
			delay(a-100);
			motor[Arm] = 0;
			btn1 = false;
		}
}
}
